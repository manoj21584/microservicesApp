package leetcode;

import java.util.HashSet;
import java.util.Set;

class Solution {
    public double lengthOfLongestSubstring(int[] nums1, int[] nums2) {
    
    	int nums[]=new int [nums1.length+nums2.length];
    	System.arraycopy(nums1, 0, nums, 0, nums1.length);
    	System.arraycopy(nums2, 0, nums, nums1.length, nums2.length);
//    	System.out.println(nums.length);
    	for(int k :nums) {
    		System.out.println(k);
    	}
    	String types=nums.length%2==0?"even":"odd";
        System.out.println(types);
    	String types1=nums.length%2==0?"even":"odd";
//    	int j=3/2;
//    	System.out.println(j);
        if(types=="even"){
            int l=nums.length/2;
            double j=(double)(nums[l-1]+nums[l]/2);
//            System.out.println(nums[l-1]+nums[l]/2);
            return j;
        }
        else {
        int l =nums.length/2;
        double j=(double) nums[l];
        return j;
        }
//		return (double) nums[j] ;
        
    }
    public static void main(String[] args) {
    	Solution solution=new Solution();
    	int nums1  []= {1,3};
    	int nums2[]= {2};
    	double k=solution.lengthOfLongestSubstring(nums1,nums2);
    	System.out.println(k);
        
    }
}