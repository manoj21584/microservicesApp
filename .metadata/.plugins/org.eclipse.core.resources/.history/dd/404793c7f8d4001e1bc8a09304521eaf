package com.springmicro.employeeservice.service.impl;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.client.RestTemplate;

import com.springmicro.departmentservice.dto.DepartmentDto;
import com.springmicro.employeeservice.dto.ApiResponseDto;
import com.springmicro.employeeservice.dto.EmployeeDto;
import com.springmicro.employeeservice.entity.Employee;
import com.springmicro.employeeservice.exception.ResourceNotFoundException;
import com.springmicro.employeeservice.repository.EmployeeRepository;
import com.springmicro.employeeservice.service.EmployeeService;

@Service
public class EmployeeServiceImpl implements EmployeeService {
	private EmployeeRepository employeeRepository;
	private RestTemplate restTemplate;

	public EmployeeServiceImpl(EmployeeRepository employeeRepository, RestTemplate restTemplate) {
		this.employeeRepository = employeeRepository;
		this.restTemplate = restTemplate;
	}

	

	@Override
	public EmployeeDto saveEmployee(EmployeeDto employeeDto) {
		Employee employee = new Employee(employeeDto.getId(), employeeDto.getFirstName(), employeeDto.getLastName(),
				employeeDto.getEmail(), employeeDto.getDepartmentCode());
		Employee saveEmployee = employeeRepository.save(employee);
		EmployeeDto saveEmployeeDto = new EmployeeDto(saveEmployee.getId(), saveEmployee.getFirstName(),
				saveEmployee.getLastName(), saveEmployee.getEmail(), saveEmployee.getDepartmentCode());
		return saveEmployeeDto;
	}

	@Override
	public EmployeeDto getByEmail(String email) {
		Employee saveEmployee = employeeRepository.findByEmail(email);
		if(saveEmployee==null) {
			throw new ResourceNotFoundException("Resource with given email:"+email+"doesn't exist");
		}
		EmployeeDto saveEmployeeDto = new EmployeeDto(saveEmployee.getId(), saveEmployee.getFirstName(),
				saveEmployee.getLastName(), saveEmployee.getEmail(), saveEmployee.getDepartmentCode());
		return saveEmployeeDto;
	}

	@Override
	public EmployeeDto getById(long id) throws Exception {
		Employee saveEmployee = employeeRepository.findById(id)
				.orElseThrow(() -> new ResourceNotFoundException("resource with given id:"+id+"not found"));
		ResponseEntity<DepartmentDto> responseEntity = restTemplate.getForEntity("http://localhost:8082/api/departments/"+saveEmployee.getDepartmentCode(),DepartmentDto.class);
		DepartmentDto departmentDto=responseEntity.getBody();
		EmployeeDto saveEmployeeDto = new EmployeeDto(saveEmployee.getId(), saveEmployee.getFirstName(),
				saveEmployee.getLastName(), saveEmployee.getEmail(), saveEmployee.getDepartmentCode());
		
		ApiResponseDto apiResponseDto=new ApiResponseDto();
		apiResponseDto.setEmployee(saveEmployeeDto);
		apiResponseDto.se(departmentDto);
		return saveEmployeeDto;
	}

}
