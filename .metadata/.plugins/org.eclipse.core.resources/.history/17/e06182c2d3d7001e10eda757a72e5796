package leetcode;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

class Solution {
    public double lengthOfLongestSubstring(int[] nums1, int[] nums2) {
    
    	int nums[]=new int [nums1.length+nums2.length];
    	System.arraycopy(nums1, 0, nums, 0, nums1.length);
    	System.arraycopy(nums2, 0, nums, nums1.length, nums2.length);
    	Arrays.sort(nums);

    	String types=nums.length%2==0?"even":"odd";
        if(types=="even"){
            int l=nums.length/2;
            double j=(double)(nums[l-1]+nums[l])/2;
            return j;
        }
        else {
        int l =nums.length/2;
        double j=(double) nums[l];
//        System.out.println(j);
        return j;
        }
        
    }
    public static void main(String[] args) {
    	Solution solution=new Solution();
    	int nums1  []= {1,2};
    	int nums2[]= {3,4};
    	double k=solution.lengthOfLongestSubstring(nums1,nums2);
    	System.out.println(k);
        
    }
}